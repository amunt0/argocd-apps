apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: media
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:13-alpine
          command:
            - sh
            - -c
            - |
              echo "Checking if PostgreSQL database exists..."
              until PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -c '\l' | grep -q "$POSTGRES_DB"; do
                echo "Database $POSTGRES_DB does not exist yet. Attempting to create it..."
                PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -c "CREATE DATABASE $POSTGRES_DB;"
                if [ $? -eq 0 ]; then
                  echo "Database $POSTGRES_DB created successfully!"
                  break
                fi
                echo "Could not create database, waiting for database to be available..."
                sleep 5
              done
              echo "Database $POSTGRES_DB exists! Proceeding with NextCloud deployment."
          env:
            - name: POSTGRES_HOST
              value: postgres.data.svc.cluster.local
            - name: POSTGRES_DB
              value: mediadb
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: nextcloud-db-creds
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-db-creds
                  key: password
        - name: init-data-dirs
          image: alpine:latest
          command:
            - sh
            - -c
            - |
              mkdir -p /var/www/html/data/external
              chmod 770 /var/www/html/data/external
              echo "Data directory initialization complete"
          volumeMounts:
            - name: nextcloud-data
              mountPath: /var/www/html/data
      containers:
        - name: nextcloud
          image: nextcloud:apache
          ports:
            - containerPort: 80
              name: http
          env:
            # Auto-install configuration
            - name: NEXTCLOUD_ADMIN_USER
              value: "admin"
            - name: NEXTCLOUD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-admin-creds
                  key: password
            - name: NEXTCLOUD_TRUSTED_DOMAINS
              value: "nextcloud.home localhost"
            - name: POSTGRES_HOST
              value: postgres.data.svc.cluster.local
            - name: POSTGRES_DB
              value: mediadb
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: nextcloud-db-creds
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-db-creds
                  key: password
            - name: PHP_MEMORY_LIMIT
              value: "512M"
            - name: PHP_UPLOAD_LIMIT
              value: "512M"
            - name: TRUSTED_PROXIES
              value: "10.0.0.0/8 172.16.0.0/12 192.168.0.0/16"
            - name: APACHE_DISABLE_REWRITE_IP
              value: "1"
            - name: OVERWRITEHOST
              value: "nextcloud.home"
            - name: OVERWRITEPROTOCOL
              value: "https"
            - name: REDIS_HOST
              value: "redis.data.svc.cluster.local"
          volumeMounts:
            - name: config
              mountPath: /var/www/html/config
            - name: nextcloud-data
              mountPath: /var/www/html/data
            - name: nextcloud-custom-config
              mountPath: /etc/apache2/sites-available/000-default.conf
              subPath: apache-config.conf
          startupProbe:
            httpGet:
              path: /status.php
              port: http
            initialDelaySeconds: 60
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /status.php
              port: http
            initialDelaySeconds: 180
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /status.php
              port: http
            initialDelaySeconds: 60
            periodSeconds: 15
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # Wait for Nextcloud to initialize
                    until [ -f /var/www/html/config/config.php ]; do 
                      echo "Waiting for Nextcloud to initialize..."
                      sleep 10
                    done
                    
                    # Wait a bit more to ensure database is fully set up
                    sleep 30
                    
                    # Create MinIO configuration
                    cat > /var/www/html/config/s3.config.php << 'EOF'
                    <?php
                    $CONFIG = [
                      'objectstore' => [
                        'class' => '\\OC\\Files\\ObjectStore\\S3',
                        'arguments' => [
                          'bucket' => 'nextcloud',
                          'autocreate' => true,
                          'key' => 'admin',
                          'secret' => 'minio123SecurePassword!@#',
                          'hostname' => '192.168.68.64',
                          'port' => 9000,
                          'use_ssl' => false,
                          'use_path_style' => true,
                        ],
                      ],
                    ];
                    EOF
                    
                    # Create Redis configuration
                    cat > /var/www/html/config/redis.config.php << 'EOF'
                    <?php
                    $CONFIG = [
                      'memcache.distributed' => '\\OC\\Memcache\\Redis',
                      'memcache.local' => '\\OC\\Memcache\\APCu',
                      'redis' => [
                        'host' => 'redis.data.svc.cluster.local',
                        'port' => 6379,
                      ],
                    ];
                    EOF
                    
                    # Run occ maintenance:repair to apply configurations
                    echo "Running maintenance:repair to apply configurations..."
                    php /var/www/html/occ maintenance:repair
                    
                    # Enable required apps
                    echo "Enabling required apps..."
                    php /var/www/html/occ app:enable files_external
                    php /var/www/html/occ app:enable files_external_s3
                    
                    echo "Nextcloud post-initialization complete"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              memory: 512Mi
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: nextcloud-config-pvc
        - name: nextcloud-data
          persistentVolumeClaim:
            claimName: nextcloud-data-pvc
        - name: nextcloud-custom-config
          configMap:
            name: nextcloud-apache-config
