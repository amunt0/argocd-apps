apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: media
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      initContainers:
        - name: init-data-dirs
          image: alpine:latest
          command:
            - sh
            - -c
            - |
              mkdir -p /var/www/html/data/external
              chmod 770 /var/www/html/data/external
              echo "Initialization complete"
          volumeMounts:
            - name: nextcloud-data
              mountPath: /var/www/html/data
      containers:
        - name: nextcloud
          image: nextcloud:apache
          ports:
            - containerPort: 80
              name: http
          env:
            - name: POSTGRES_HOST
              value: postgres.data.svc.cluster.local
            - name: POSTGRES_DB
              value: mediadb
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-creds
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-creds
                  key: password
            - name: PHP_MEMORY_LIMIT
              value: "512M"
            - name: PHP_UPLOAD_LIMIT
              value: "512M"
            - name: TRUSTED_PROXIES
              value: "10.0.0.0/8 172.16.0.0/12 192.168.0.0/16"
            - name: APACHE_DISABLE_REWRITE_IP
              value: "1"
            - name: OVERWRITEHOST
              value: "nextcloud.home"
            - name: OVERWRITEPROTOCOL
              value: "https"
          volumeMounts:
            - name: config
              mountPath: /var/www/html/config
            - name: nextcloud-data
              mountPath: /var/www/html/data
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # Wait for Nextcloud to initialize
                    until [ -f /var/www/html/config/config.php ]; do 
                      echo "Waiting for Nextcloud to initialize..."
                      sleep 10
                    done
                    
                    # Create script to mount external storage
                    cat > /tmp/mount_external_storage.php << 'EOF'
                    <?php
                    require_once '/var/www/html/lib/base.php';
                    
                    // Wait for full initialization
                    while (!\OC::$server->getSystemConfig()->getValue('installed', false)) {
                      echo "Waiting for Nextcloud to fully initialize...\n";
                      sleep(10);
                    }
                    
                    echo "Nextcloud is fully initialized. Proceeding with external storage setup...\n";
                    
                    // Get necessary services
                    $appManager = \OC::$server->getAppManager();
                    
                    // Enable external storage app if not already enabled
                    if (!$appManager->isEnabledForUser('files_external')) {
                      echo "Enabling external storage app...\n";
                      $appManager->enableApp('files_external');
                    }
                    
                    echo "External storage setup completed!\n";
                    EOF
                    
                    # Wait a bit more to ensure database is fully set up
                    sleep 30
                    
                    # Execute the script
                    php /tmp/mount_external_storage.php
                    
                    echo "Nextcloud post-initialization complete"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              memory: 512Mi
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: nextcloud-config-pvc
        - name: nextcloud-data
          persistentVolumeClaim:
            claimName: nextcloud-data-pvc
