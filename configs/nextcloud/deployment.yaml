apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: media
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nextcloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      securityContext:
        fsGroup: 33  # www-data group
      initContainers:
        - name: wait-for-db
          image: postgres:13-alpine
          command:
            - sh
            - -c
            - |
              echo "Checking if PostgreSQL database exists..."
              until PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -c '\l' | grep -q "$POSTGRES_DB"; do
                echo "Database $POSTGRES_DB does not exist yet. Attempting to create it..."
                PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -c "CREATE DATABASE $POSTGRES_DB;"
                if [ $? -eq 0 ]; then
                  echo "Database $POSTGRES_DB created successfully!"
                  break
                fi
                echo "Could not create database, waiting for database to be available..."
                sleep 5
              done
              echo "Database $POSTGRES_DB exists! Proceeding with NextCloud deployment."
          env:
            - name: POSTGRES_HOST
              value: postgres.data.svc.cluster.local
            - name: POSTGRES_DB
              value: mediadb
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: nextcloud-db-creds
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-db-creds
                  key: password
        - name: fix-permissions
          image: alpine:latest
          command:
            - sh
            - -c
            - |
              mkdir -p /var/www/html/data
              chmod 0770 /var/www/html/data
              chown 33:33 /var/www/html/data  # www-data:www-data
              echo "Data directory permissions set to 0770"
          volumeMounts:
            - name: nextcloud-data
              mountPath: /var/www/html/data
        # This special init container will prepare everything for Nextcloud
        - name: setup-nextcloud
          image: nextcloud:apache
          command:
            - bash
            - -c
            - |
              set -ex
              
              # Create necessary directories
              mkdir -p /var/www/html/config
              mkdir -p /var/www/html/data
              
              # If config.php doesn't exist, we need to create it manually
              if [ ! -f /var/www/html/config/config.php ]; then
                echo "Creating initial config.php file..."
                
                # Create the most basic config.php that will let Nextcloud start
                cat > /var/www/html/config/config.php << 'EOF'
              <?php
              $CONFIG = array (
                'instanceid' => '$(openssl rand -hex 16)',
                'passwordsalt' => '$(openssl rand -hex 16)',
                'secret' => '$(openssl rand -hex 16)',
                'trusted_domains' => array('nextcloud.home', 'localhost'),
                'datadirectory' => '/var/www/html/data',
                'dbtype' => 'pgsql',
                'dbhost' => 'postgres.data.svc.cluster.local',
                'dbname' => 'mediadb',
                'dbuser' => 'postgres',
                'dbpassword' => 'NasServerPostgresdb',
                'dbport' => '',
                'dbtableprefix' => 'oc_',
                'installed' => true,
                
                # S3 primary storage configuration
                'objectstore' => array(
                  'class' => '\\OC\\Files\\ObjectStore\\S3',
                  'arguments' => array(
                    'bucket' => 'nextcloud',
                    'autocreate' => true,
                    'key' => 'admin',
                    'secret' => 'minio123SecurePassword!@#',
                    'hostname' => '192.168.68.64',
                    'port' => 9000,
                    'use_ssl' => false,
                    'use_path_style' => true,
                  ),
                ),
                
                # Redis configuration
                'memcache.local' => '\\OC\\Memcache\\APCu',
                'memcache.distributed' => '\\OC\\Memcache\\Redis',
                'redis' => array(
                  'host' => 'redis.data.svc.cluster.local',
                  'port' => 6379,
                ),
                
                'trusted_proxies' => array('10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16'),
                'overwriteprotocol' => 'https',
                'overwrite.cli.url' => 'https://nextcloud.home',
              );
              EOF
              
                echo "Created config.php to bypass installation process."
              else
                echo "config.php already exists, skipping creation."
              fi
              
              # Ensure proper permissions
              chown -R www-data:www-data /var/www/html/config
              chown -R www-data:www-data /var/www/html/data
          volumeMounts:
            - name: config
              mountPath: /var/www/html/config
            - name: nextcloud-data
              mountPath: /var/www/html/data
      containers:
        - name: nextcloud
          image: nextcloud:apache
          ports:
            - containerPort: 80
              name: http
          env:
            # Skip auto-installation since we've already set up the config file
            - name: NEXTCLOUD_UPDATE
              value: "1"
            # Skip the check_data_directory_permissions warning
            - name: NEXTCLOUD_DATA_DIR_PERMISSIONS
              value: "0770"
            # PHP and proxy settings
            - name: PHP_MEMORY_LIMIT
              value: "512M"
            - name: PHP_UPLOAD_LIMIT
              value: "512M"
            # Admin username and password - these aren't used during initialization
            # but might be needed by some apps
            - name: NEXTCLOUD_ADMIN_USER
              value: "admin"
            - name: NEXTCLOUD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-admin-creds
                  key: password
          volumeMounts:
            - name: config
              mountPath: /var/www/html/config
            - name: nextcloud-data
              mountPath: /var/www/html/data
            - name: nextcloud-custom-config
              mountPath: /etc/apache2/sites-available/000-default.conf
              subPath: apache-config.conf

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              memory: 512Mi
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - |
                    # Wait for Nextcloud to be fully initialized
                    sleep 30
                    
                    # Run database repairs if needed
                    php /var/www/html/occ maintenance:repair || true
                    
                    # Enable required apps
                    php /var/www/html/occ app:enable files_external || echo "Could not enable files_external"
                    php /var/www/html/occ app:enable files_external_s3 || echo "Could not enable files_external_s3"
                    
                    # Only setup external storage if it doesn't exist
                    if ! php /var/www/html/occ files_external:list | grep -q "Movies"; then
                      # Setup external storages
                      echo "Setting up external S3 storage for media buckets..."
                      
                      # Movies bucket
                      php /var/www/html/occ files_external:create \
                        "Movies" amazons3 amazons3::accesskey \
                        --config bucket=movies \
                        --config hostname=192.168.68.64 \
                        --config port=9000 \
                        --config region=optional \
                        --config use_ssl=false \
                        --config use_path_style=true \
                        --config legacy_auth=false \
                        --config key=admin \
                        --config secret=minio123SecurePassword!@# || echo "Failed to set up Movies bucket"
                      
                      # Series bucket
                      php /var/www/html/occ files_external:create \
                        "TV Series" amazons3 amazons3::accesskey \
                        --config bucket=series \
                        --config hostname=192.168.68.64 \
                        --config port=9000 \
                        --config region=optional \
                        --config use_ssl=false \
                        --config use_path_style=true \
                        --config legacy_auth=false \
                        --config key=admin \
                        --config secret=minio123SecurePassword!@# || echo "Failed to set up TV Series bucket"
                      
                      # Pictures bucket
                      php /var/www/html/occ files_external:create \
                        "Pictures" amazons3 amazons3::accesskey \
                        --config bucket=pictures \
                        --config hostname=192.168.68.64 \
                        --config port=9000 \
                        --config region=optional \
                        --config use_ssl=false \
                        --config use_path_style=true \
                        --config legacy_auth=false \
                        --config key=admin \
                        --config secret=minio123SecurePassword!@# || echo "Failed to set up Pictures bucket"
                    fi
                    
                    echo "Nextcloud post-initialization completed successfully"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: nextcloud-config-pvc
        - name: nextcloud-data
          persistentVolumeClaim:
            claimName: nextcloud-data-pvc
        - name: nextcloud-custom-config
          configMap:
            name: nextcloud-apache-config
