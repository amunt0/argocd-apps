apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-sync
  namespace: dns
spec:
  selector:
    matchLabels:
      app: dns-sync
  replicas: 1
  template:
    metadata:
      labels:
        app: dns-sync
    spec:
      serviceAccountName: dns-sync
      containers:
      - name: dns-sync
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          apk add --no-cache bash jq curl bind-tools
          
          # Define the domain suffix
          DOMAIN="home"
          
          while true; do
            echo "Syncing DNS records..."
            
            # Get KUBECONFIG from service account
            KUBE_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
            KUBERNETES_API="https://kubernetes.default.svc"
            
            # Get all services with type LoadBalancer
            SERVICES=$(curl -s -k -H "Authorization: Bearer $KUBE_TOKEN" \
              "${KUBERNETES_API}/api/v1/services" | \
              jq -r '.items[] | select(.spec.type == "LoadBalancer") | select(.status.loadBalancer.ingress != null) | 
                  [.metadata.name, .metadata.namespace, .status.loadBalancer.ingress[0].ip] | @tsv')
            
            echo "Found services: $SERVICES"
            
            # Create a new custom.list file
            echo "# Automatically generated by dns-sync on $(date)" > /tmp/custom.list
            
            # Add existing manual entries if they exist
            if [ -f /etc/pihole/manual.list ]; then
              cat /etc/pihole/manual.list >> /tmp/custom.list
            fi
            
            # Process services and update Pi-hole
            while IFS=$'\t' read -r NAME NAMESPACE IP; do
              if [ ! -z "$NAME" ] && [ ! -z "$IP" ]; then
                HOSTNAME="${NAME}.${DOMAIN}"
                echo "Adding $HOSTNAME with IP $IP"
                echo "$IP $HOSTNAME" >> /tmp/custom.list
              fi
            done <<< "$SERVICES"
            
            # Copy the updated list to Pi-hole
            if [ -s /tmp/custom.list ]; then
              cp /tmp/custom.list /etc/pihole/custom.list
              
              # Reload Pi-hole DNS
              echo "Reloading Pi-hole DNS configuration..."
              curl -s "http://localhost:80/admin/api.php?reloadDNS" > /dev/null 2>&1 || \
              curl -s "http://pihole.dns.svc.cluster.local/admin/api.php?reloadDNS" > /dev/null 2>&1
              
              echo "DNS records updated successfully"
            else
              echo "No valid services found, not updating DNS"
            fi
            
            # Wait before next sync
            echo "Sleeping for 5 minutes before next sync"
            sleep 300
          done
        volumeMounts:
        - name: pihole-data
          mountPath: /etc/pihole
      volumes:
      - name: pihole-data
        persistentVolumeClaim:
          claimName: pihole-data
